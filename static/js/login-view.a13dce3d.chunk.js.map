{"version":3,"file":"static/js/login-view.a13dce3d.chunk.js","mappings":"uRACA,GAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,0B,UCS3HA,GAAQC,EAAAA,EAAAA,GAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,wBAgFZ,EA3EkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAEpBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACH,OAAOT,EAASU,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,SAYN,OACE,iBAAKC,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,qBAEA,kBAAMC,aAAa,MAAMC,SAZR,SAAAP,GACnBA,EAAMQ,iBAENnB,EAASoB,EAAAA,EAAAA,MAAqB,CAAEjB,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAOuCS,UAAWC,EAAAA,KAA5D,WACE,UAACK,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,WACE,SAAC2B,EAAA,EAAD,CACEP,UAAWC,EAAAA,MACXO,MAAM,QACNC,KAAK,QACLX,KAAK,QACLC,MAAOX,EACPsB,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAUnB,KAGZ,SAACY,EAAA,EAAD,CACEP,UAAWC,EAAAA,MACXO,MAAM,WACNC,KAAK,WACLX,KAAK,WACLC,MAAOT,EACPoB,OAAO,QACPC,KAAK,QACLC,MAAM,UACNC,QAAQ,WACRC,SAAUnB,KAGZ,SAACoB,EAAA,EAAD,CACEN,KAAK,SACLT,UAAWC,EAAAA,OACXY,QAAQ,YACRF,KAAK,QACLC,MAAM,UALR,uBAUDpB,IAAS,SAACwB,EAAA,EAAD,CAAOC,SAAS,QAAhB","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView/LoginView.module.scss?d969","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"LoginView_Container__WDgx+\",\"Title\":\"LoginView_Title__+a9aC\",\"Form\":\"LoginView_Form__Tr7Vh\",\"Input\":\"LoginView_Input__tXA58\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Alert from '@mui/material/Alert';\nimport styles from './LoginView.module.scss';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(87, 115, 246)',\n    },\n  },\n});\n\nconst LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(authSelectors.getError);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className={styles.Container}>\n      <h1 className={styles.Title}>Log In</h1>\n\n      <form autoComplete=\"off\" onSubmit={handleSubmit} className={styles.Form}>\n        <ThemeProvider theme={theme}>\n          <TextField\n            className={styles.Input}\n            label=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            margin=\"dense\"\n            size=\"small\"\n            color=\"primary\"\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n\n          <TextField\n            className={styles.Input}\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            margin=\"dense\"\n            size=\"small\"\n            color=\"primary\"\n            variant=\"standard\"\n            onChange={handleChange}\n          />\n\n          <Button\n            type=\"submit\"\n            className={styles.Button}\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n          >\n            Log In\n          </Button>\n        </ThemeProvider>\n        {error && <Alert severity=\"error\">You aren't logged in</Alert>}\n      </form>\n    </div>\n  );\n};\n\nexport default LoginView;\n"],"names":["theme","createTheme","palette","primary","main","dispatch","useDispatch","useState","email","setEmail","password","setPassword","error","useSelector","authSelectors","handleChange","event","target","name","value","className","styles","autoComplete","onSubmit","preventDefault","authOperations","ThemeProvider","TextField","label","type","margin","size","color","variant","onChange","Button","Alert","severity"],"sourceRoot":""}